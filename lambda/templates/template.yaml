AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  BaseStackName:
    Type: String
    Description: Name of the base stack
  CodeKey:
    Type: String
    Description: Name of the S3 key poiting to the lambda function code
  LayerKey:
    Type: String
    Description: Name of the S3 key poiting to the lambda layer containg the executable
  GithubUsername:
    Type: String
    Description: Github username the lambda will use
    Default: emacs-reddit-tips-n-tricks-bot
  PATSecretsKey:
    Type: String
    Description: >
      Name of the secrets key for the GH PAT token, note this can't be a password
      since password authentication was removed by Github on August 13, 2021.
  GithubUserEmail:
    Type: String
    Description: Github username the lambda will use
    Default: emacstipsntricksbot@gmail.com

Resources:

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement: 
          - Effect: Allow
            Principal: 
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  ExeLambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket: !ImportValue
          'Fn::Sub': '${BaseStackName}-MiscBucket'
        S3Key: !Ref LayerKey
        
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Layers:
        # https://github.com/lambci/git-lambda-layer
        - arn:aws:lambda:us-east-1:553035198032:layer:git-lambda2:8
        - !Ref ExeLambdaLayer
      Role: !GetAtt LambdaFunctionRole.Arn
      Runtime: provided  # Custom runtime
      Handler: bootstrap
      Timeout: 120
      MemorySize: 512  # Probably we can get away with 256
      Environment:
        Variables:
          GH_USERNAME: !Ref GithubUsername
          GH_EMAIL: !Ref GithubUserEmail
          GH_PAT: !Sub '{{resolve:secretsmanager:${PATSecretsKey}}}'
      Code:
        S3Bucket: !ImportValue
          'Fn::Sub': '${BaseStackName}-MiscBucket'
        S3Key: !Ref CodeKey

  ScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "ScheduledRule"
      ScheduleExpression: "rate(7 days)"
      State: "ENABLED"
      Targets: 
        - Arn: !GetAtt LambdaFunction.Arn
          Id: "TargetFunctionV1"

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref LambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt ScheduledRule.Arn
